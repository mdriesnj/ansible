    - name: Distribution
      debug: msg="{{ ansible_distribution }}"

    # - name: pause
    #   pause:
    #     seconds: 10

    - name: alpine - configure sshd without pam
      become: true
      lineinfile:
        path: "/etc/ssh/sshd_config"
        regex: ^(# *)?{{item.key}}
        line: "{{item.key}} {{item.value}}"
      loop:
        - { key: "PermitRootLogin", value: "no" }
        - { key: "Protocol", value: "2" } 
        - { key: "HostBasedAuthentication", value: "no" } 
        - { key: "IgnoreRHosts", value: "yes" }
        - { key: "AuthorizedKeysFile", value: ".ssh/authorized_keys" } 
        - { key: "PubkeyAuthentication", value: "yes" }
        - { key: "MaxAuthTries", value: "3" }
        - { key: "PermitUserEnvironment", value: "no" } 
        - { key: "X11Forwarding", value: "no" } 
        - { key: "AllowTcpForwarding", value: "no" } 
        - { key: "PermitEmptyPasswords", value: "no" }
        - { key: "AllowUsers", value: "mdries root" } 
        - { key: "Port", value: "22" } 
        - { key: "SyslogFacility", value: "AUTH" } 
        - { key: "LogLevel", value: "INFO" } 
        - { key: "ClientAliveInterval", value: "300" } 
#      when: inventory_hostname in groups['new_alpine']
      when: ansible_distribution == 'Alpine'

    - name: debian - configure sshd with pam
      become: true
      lineinfile:
        path: "/etc/ssh/sshd_config"
        regex: ^(# *)?{{item.key}}
        line: "{{item.key}} {{item.value}}"
      loop:
        - { key: "PermitRootLogin", value: "no" } # change back
        - { key: "Protocol", value: "2" } 
        - { key: "HostBasedAuthentication", value: "no" } 
        - { key: "IgnoreRHosts", value: "yes" }
        - { key: "AuthorizedKeysFile", value: ".ssh/authorized_keys" } 
        - { key: "PubkeyAuthentication", value: "yes" }
        - { key: "MaxAuthTries", value: "3" }
        - { key: "PermitUserEnvironment", value: "no" } 
        - { key: "UsePAM", value: "yes" }
        - { key: "X11Forwarding", value: "no" } 
        - { key: "AllowTcpForwarding", value: "no" } 
        - { key: "PermitEmptyPasswords", value: "no" }
        - { key: "AllowUsers", value: "mdries root" } 
        - { key: "Port", value: "22" } 
        - { key: "SyslogFacility", value: "AUTH" } 
        - { key: "LogLevel", value: "INFO" } 
        - { key: "ClientAliveInterval", value: "300" }   
      when: inventory_hostname in groups['new_debian'] or inventory_hostname in groups['new_alma']
    
    - name: systemd stuff
      become: true
      systemd:
        daemon_reload: yes
      when: inventory_hostname in groups['new_debian'] or inventory_hostname in groups['new_alma']

    - name: service stuff    
      become: true
      service:
        name: sshd
        state: restarted
      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu' or ansible_distribution =='AlmaLinux' or ansible_distribution =='Alpine'
  
