    - name: Distribution
      debug: msg="{{ ansible_distribution }}"

    # - name: pause
    #   pause:
    #     seconds: 10

    #  - name: First run
    #    debug: msg="{{ firstrun }}"
    #  - name: ansible
    #    debug: msg="{{ ansible_boot_image }}"
    #  - name: Print all available facts
    #    ansible.builtin.debug:
    #      var: ansible_facts    
    #  debug: msg="{{ ansible_default_ipv4 }}"

    #----------Alpine----------
    #---------- root ------------------
    - name: root copy .zshrc
      become: true
      copy:
        remote_src: false
        src: /src_dot_files/.zshrc
        dest: /root
    #   when: inventory_hostname in groups['new_alpine_container']

#    - name: root create neofetch/config
#      become: true
#      file:
#        path: /root/.config/neofetch/
#        state: directory
    #   when: inventory_hostname in groups['new_alpine_container']

#    - name: root copy neofetch/config
#      become: true
#      copy:
#        remote_src: false
#        src: /home/semaphore/src_dot_files/neofetch/config.conf
#        dest: /root/.config/neofetch/
#    # when: inventory_hostname in groups['new_alpine_container']

    - name: root create helix/config
      become: true
      file:
        path: /root/.config/helix/
        state: directory

    - name: root copy helix/config
      become: true
      copy:
        remote_src: false
        src: /src_dot_files/helix/config.toml
        dest: /root/.config/helix/

    - name: root create fastfetch/config
      become: true
      file:
        path: /root/.config/fastfetch/
        state: directory
        
    - name: root copy fastfetch/config
      become: true
      copy:
        remote_src: false
        src: /src_dot_files/fastfetch/config.jsonc
        dest: /root/.config/fastfetch/


    
#    - name: root copy authorized_keys
#      become: true
#      copy:
#        remote_src: false
#        src: /home/semaphore/.ssh/authorized_keys
#        dest: /root/.ssh/
#        mode: 0700
#        owner: root

    #---------- mdries ------------------    
    - name: mdries copy .zshrc
      copy:
        remote_src: false
        src: /src_dot_files/.zshrc
        dest: /home/mdries
        owner: mdries
#      when: inventory_hostname not in groups['nas']

#    - name: mdries copy authorized_keys
#      become: true
#      copy:
#        remote_src: false
#        src: /home/semaphore/.ssh/authorized_keys
#        dest: /home/mdries/.ssh/
#        mode: 0700
#        owner: mdries

#    - name: mdries create neofetch/config
#      file:
#        path: /home/mdries/.config/neofetch/
#        state: directory
#        owner: mdries
#      when: inventory_hostname not in groups['nas']

#    - name: mdries copy neofetch/config
#      copy:
#        remote_src: false
#        src: /home/semaphore/src_dot_files/neofetch/config.conf
#        dest: /home/mdries/.config/neofetch/
#        owner: mdries
#      when: inventory_hostname not in groups['nas']


    - name: mdries create helix/config
      file:
        path: /home/mdries/.config/helix/
        state: directory
        owner: mdries
    #   when: inventory_hostname not in groups['nas']

    - name: mdries copy helix/config
      copy:
        remote_src: false
        src: /src_dot_files/helix/config.toml
        dest: /home/mdries/.config/helix/
        owner: mdries

    - name: mdries create fastfetch
      file:
        path: /home/mdries/.config/fastfetch/
        state: directory
        
    - name: mdries copy fastfetch/config
      copy:
        remote_src: false
        src: /src_dot_files/fastfetch/config.jsonc
        dest: /home/mdries/.config/fastfetch/

    # - name: chown mdries
    #   become: true
    #   file:
    #     path: /home/mdries
    #     #state: directory
    #     recurse: yes
    #     owner: mdries
    #     group: mdries
    #   when: inventory_hostname not in groups['nas']



#    - name: chown mdries
#      become: true
#      file:
#        path: ~/
#        state: directory
#        recurse: yes
#        owner: mdries
#        group: mdries
#      when: inventory_hostname in groups['nas']






