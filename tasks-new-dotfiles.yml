  #- name: Distribution
  #  debug: msg="{{ ansible_hostname }}"
  #  debug: msg="{{ ansible_default_ipv4 }}"
  
#  - name: copy dotfiles.tar to other systems
#    copy:
#      remote_src: false
#      src: /home/mdries/dotfiles.tar
#      dest: /tmp/ 

#------ mdries ---------------
#------ Clean up first -------
  - name: chown mdries
    become: true
    file:
      path: /home/mdries
      state: directory
      recurse: yes
      owner: mdries
      group: mdries
        
  - name: clean gitfiles
    file:
      path: /home/mdries/.git
      state: absent

  - name: clean .zshrc			
    file:
      path: /home/mdries/.zshrc
      state: absent

  - name: clean .vimrc
    file:
      path: /home/mdries/.vimrc
      state: absent

  - name: clean .config
    file:
      path: /home/mdries/.config
      state: absent

  - name: clean .local
    file:
      path: /home/mdries/.local
      state: absent

  - name: clean .cache
    file:
      path: /home/mdries/.cache
      state: absent

  - name: clean .oh-my-zsh
    file:
      path: /home/mdries/.oh-my-zsh
      state: absent

  - name: clean .zshrc.old
    file:
      path: /home/mdries/.zshrc.old
      state: absent

  - name: clean .zshrc.stock
    file:
      path: /home/mdries/.zshrc.stock
      state: absent

  - name: clean ssh-config
    file:
      path: /home/mdries/ssh-config
      state: absent

  - name: clean dotfiles
    file:
      path: /home/mdries/dotfiles
      state: absent

#----- extract dotfiles.tar ------

#  - name: extract dotfiles
#    unarchive:
#      src: /tmp/dotfiles.tar
#      dest: /home/mdries/
#      remote_src: true

#------- copy dotfiles -----------

  - name: mdries copy .zshrc
    copy:
      remote_src: false
      src: /home/mdries/src_dot_files/.zshrc
      dest: /home/mdries

  - name: mdries copy .oh-my-zsh
    copy:
      remote_src: false
      src: /home/mdries/src_dot_files/.oh-my-zsh/
      dest: /home/mdries/.oh-my-zsh/

  - name: mdries git clone astronvim
    git:
      repo: https://github.com/AstroNvim/template
      dest: /home/mdries/.config/nvim
      depth: 1

  - name: mdries remove .git from .config/nvim
    file:
      path: /home/mdries/.config/nvim/.git
      state: absent
  
#  - name: chown mdries
#    become: true
#    file:
#      path: /home/mdries
#      state: directory
#      recurse: yes
#      owner: mdries
#      group: mdries
  
#------ root ---------------
#------ Clean up first -------
#  - name: chown root regular hosts
#    become: true
#    file:
#      path: /root
#      state: directory
#      recurse: yes
#      owner: root
#      group: root
    #when: ansible_hostname != 'pve' or ansible_hostname != 'hopperspve'
#    when: inventory_hostname in groups['normal']
      
#  - name: chown root pve .vimrc
#    become: true
#    file:
#      path: /root/.vimrc
#      state: file
#      owner: root
#      group: root
#    when: inventory_hostname in groups['pve']    

#  - name: chown root pve .oh-my-zsh
#    become: true
#    file:
#      path: /root/.oh-my-zsh
#      state: directory
#      recurse: yes
#      owner: root
#      group: root
#    when: inventory_hostname in groups['pve']    

  - name: root clean gitfiles
    become: true
    file:
      path: /root/.git
      state: absent

  - name: root clean .zshrc
    become: true
    file:
      path: /root/.zshrc
      state: absent

  - name: root clean .vimrc
    become: true
    file:
      path: /root/.vimrc
      state: absent

  - name: root clean .config
    become: true
    file:
      path: /root/.config
      state: absent

  - name: root clean .local
    become: true
    file:
      path: /root/.local
      state: absent

  - name: root clean .cache
    become: true
    file:
      path: /root/.cache
      state: absent

  - name: root clean .on-my-zsh
    become: true
    file:
      path: /root/.oh-my-zsh
      state: absent

  - name: root clean .zshrc.old
    become: true
    file:
      path: /root/.zshrc.old
      state: absent

  - name: root clean .zshrc.stock
    become: true
    file:
      path: /root/.zshrc.stock
      state: absent

  - name: root clean ssh-config
    become: true
    file:
      path: /root/ssh-config
      state: absent

  - name: root clean dotfiles
    become: true
    file:
      path: /root/dotfiles
      state: absent

#----- extract dotfiles.tar ------

#  - name: root extract dotfiles
#    become: true
#    unarchive:
#      src: /tmp/dotfiles.tar
#      dest: /root/
#      remote_src: true
      
#  - name: chown root regular hosts
#    become: true
#    file:
#      path: /root
#      state: directory
#      recurse: yes
#      owner: root
#      group: root
    #when: ansible_hostname != 'pve' or ansible_hostname != 'hopperspve'
#    when: inventory_hostname in groups['normal']
      
#  - name: find root files pve
#    become: true
#    find: 
#      paths: /root
#      excludes: '.ssh'
#    register: files_to_fix
    #when: ansible_hostname == 'pve' or ansible_hostname == 'hopperspve'
#    when: inventory_hostname in groups['pve']

#  - name: chown root pve .zshrc
#    become: true
#    file:
#      path: /root/.zshrc
#      state: file
#      owner: root
#      group: root
#    when: inventory_hostname in groups['pve']    
