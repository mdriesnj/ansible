    - name: Distribution
      debug: msg="{{ ansible_distribution }}"


#----Alpine
    - name: Update all installed packages to the latest versions
      #become: true
      community.general.apk:
     #   upgrade: true
        update_cache: true
      when: ansible_distribution == 'Alpine' 

    - name: Run Shell Command with Pipe and Capture Status
      become: true
      shell: "set -o pipefail; apk -u list | grep '^linux-virt'; echo $?"
      register: pipe_status_result
      changed_when: false
      when: ansible_distribution == 'Alpine' 

    - name: Extract Exit Status from Result
      set_fact:
        pipe_exit_status: "{{ pipe_status_result.stdout_lines[-1] }}"
      when: ansible_distribution == 'Alpine' 

    - name: Print the value of the variable "pipe_exit_status"
      debug:
          var: pipe_exit_status
      when: ansible_distribution == 'Alpine' 

    - name: Upgrade Alpine Linux packages now
      #become: true
      community.general.apk:
       # name: *
        #available: yes
       # state: latest
         upgrade: true
      when: ansible_distribution == 'Alpine' 

    - name: Reboot the system if a kernel update is installed
      become: true
      reboot:
          msg: "Reboot initiated by Ansible for kernel updates"
          connect_timeout: 5
          reboot_timeout: 120
          pre_reboot_delay: 0
          post_reboot_delay: 30
          test_command: uptime
      when: ansible_distribution == 'Alpine' and pipe_exit_status == 0

#----Debian
    - name: Remove dependencies that are no longer required
      become: true
      apt:
        autoremove: yes
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']
    
    - name: Debian hosts update apt packages
      become: true
      apt:
        upgrade: dist
        update_cache: yes
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']

#    - name: Reboot box if kernel/libs updated and requested by the system
#      shell: sleep 10 && /sbin/shutdown -r now 'Rebooting box to update system libs/kernel as needed' 
#      args:
#          removes: /var/run/reboot-required
#      async: 300
#      poll: 0
#      ignore_errors: true
#      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']

#    - name: Wait for system to become reachable again
#      wait_for_connection:
#          delay: 60
#          timeout: 120
#      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']



#----Alpine and Debian - sysctl 
#    - name: sysctl updates
#      become: true
#      sysctl:
#        name: '{{ item.key }}'
#        value: '{{ item.value }}'
#        sysctl_set: yes
#        state: present
#        reload: yes
#        ignoreerrors: yes
#      with_dict: '{{ sysctl_config }}'  
#      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu' or ansible_distribution =='Alpine') and inventory_hostname not in groups['pve']


#----Alma
    # - name: update yum package
    #   become: true
    #   yum:
    #     name: '*'
    #     state: latest
    #   when: ansible_distribution == 'AlmaLinux'


