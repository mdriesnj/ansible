---
- hosts: all
  become: true
  vars:
    # Setting this for unarchive to work
    ansible_remote_tmp: /tmp
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: install tar package
      yum:
        name: 'tar'
        state: latest
      when: ansible_distribution == 'AlmaLinux'

      
    - name: "get eza"
      become: true
      get_url:
        url: https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz
        dest: /tmp/
        mode: 0755
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "extract"
      become: true
      unarchive:
        remote_src: yes
        src: /tmp/eza_x86_64-unknown-linux-gnu.tar.gz
        dest: /usr/bin/
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'



#    - name: Update apt cache
#      apt:
#        name: gpg
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'


#    - name: Add an Apt signing key, uses whichever key is at the URL
#      ansible.builtin.apt_key:
#        url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: Add specified repository into sources list
#      ansible.builtin.apt_repository:
#        repo: deb http://deb.gierens.de stable main
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'


#    - name: update apt packages
#      apt:
#        update_cache: yes
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'


#    - name: Install eza
#      apt:
#        name: eza
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'



  
#    - name: "get eza executable"      
 #     get_url:
 #       url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
 #       dest: /etc/apt/keyrings
#        mode: 0755
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: "install eza key"
#      command: gpg -o /etc/apt/keyrings/gierens.gpg /tmp/deb.asc



#    - name: "extract"
#      ansible.builtin.shell: tar -xvf /tmp/eza_x86_64-unknown-linux-gnu.tar.gz -C /usr/local/bin/
#      when: ansible_distribution == 'AlmaLinux'


    - name: "extract"
      become: true
      unarchive:
        remote_src: yes
        src: /tmp/eza_x86_64-unknown-linux-gnu.tar.gz
        dest: /usr/bin/
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: "file mode"
#      become: true
#      file:
#        path: /usr/local/bin/eza
#        mode: '0755'
#      when: ansible_distribution == 'AlmaLinux'

    
#    - name: "Install gpg"
#      become: true
#      apt:
#        name: gpg
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'




    
#    - name: get eza key
#      command: curl -O /tmp/deb.asc https://raw.githubusercontent.com/eza-community/eza/main/deb.asc #|  gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: install eza key
#      ansible.builtin.shell: gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'




#    - name: install eza key
#      ansible.builtin.shell: echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" |  tee /etc/apt/sources.list.d/gierens.list
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: adjust permissions
#      ansible.builtin.shell: chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    


        
#    - name: update yum package
#      yum:
#        name: 'gpg'
#        state: latest
#      when: ansible_distribution == 'AlmaLinux'

#    - name: update yum package
#      yum:
#        name: 'gpg'
#        state: latest
#      when: ansible_distribution == 'AlmaLinux'



#    -name: 

#
#   - name: Update all packages on the system
#      community.general.openbsd_pkg:
#        name: '*'
#        state: latest
#      when: ansible_distribution == 'OpenBSD'
#
#    - name: Apply all patches and store result
 #     community.general.syspatch:
 #     register: syspatch
  #    when: ansible_distribution == 'OpenBSD' 
      
 #   - name: Reboot if patch requires it
  #    ansible.builtin.reboot:
   #   when: ansible_distribution == 'OpenBSD' and syspatch.reboot_needed
