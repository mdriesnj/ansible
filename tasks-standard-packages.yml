#     - name: Distribution
#       debug: msg="{{ ansible_distribution }}"


#-------- Alpine------------------------
    - name: Alpine install 
      become: true
      apk:
        name:  bat, btop, curl, git, lsd, qemu-guest-agent, tmux, wget, zsh-syntax-highlighting, docker, docker-compose
        state: latest
        update_cache: true
      when: ansible_distribution == 'Alpine'


#-------- Debian-------------------------    
    - name: HOSTS Debian Hosts Update apt cache
      become: true
      apt:
        update_cache: yes
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']

    - name: HOSTS Debian Hosts packages
      become: true
      apt:
        name: 
          - bat
          - btop
#          - build-essential
#          - clang
          - curl
          - docker
          - docker-compose
#          - fd-find
#          - fzf
#          - gcc
          - git 
#          - neofetch
          - lsd
          - qemu-guest-agent
          - net-tools   
#          - ranger
#          - ripgrep
#          - tldr
          - tmux
          - wget
          - zsh
          - zsh-syntax-highlighting
#          - xz-utils
        state: latest
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']

    - name: HOSTS Debian remove postfix 
      become: true
      apt:
        name: 
          - postfix
        state: absent
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and inventory_hostname not in groups['pve']


    - name: Copy HX
      become: true
      copy:
        remote_src: false
        src: /general-exe/hx
        dest: /usr/bin/hx
        mode: 0755
        group: users
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and (inventory_hostname in groups['new_container'] or inventory_hostname in groups['new_vm'])

    - name: Make helix runtime location
      become: true
      file:
        path: /usr/share/helix
        state: directory
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and (inventory_hostname in groups['new_container'] or inventory_hostname in groups['new_vm'])      
    - name: Copy HX runtime tar
      become: true
      copy:
        remote_src: false
        src: /general-exe/runtime.tar
        dest: /tmp/
        mode: 0755
        group: users
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and (inventory_hostname in groups['new_container'] or inventory_hostname in groups['new_vm'])
    - name: extract hx runtime tar
      become: true
      unarchive:
        remote_src: true
        src: /tmp/runtime.tar
        dest: /usr/share/helix/
        mode: 0755
        group: users
      when: (ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu') and (inventory_hostname in groups['new_container'] or inventory_hostname in groups['new_vm'])

#-------- PVE-------------------------    
    - name: PVE Debian Update apt cache
      become: true
      apt:
        update_cache: yes
      when: inventory_hostname in groups['pve'] 

    - name: PVE Debian packages
      become: true
      apt:
        name: 
          - bat
          - btop
#          - build-essential
#          - clang
          - curl
#          - fd-find
#          - fzf
#          - gcc
#          - git 
#          - neofetch
          - lm-sensors
          - lsd
#          - qemu-guest-agent
          - net-tools   
          - tmux
#          - ranger
#          - ripgrep
#          - tldr
          - wget
          - zsh
          - zsh-syntax-highlighting
#          - xz-utils
        state: latest
      when: inventory_hostname in groups['pve'] 


#-------- Alm-------------------------    

    - name: alma dnf install 1
      become: true
      dnf:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
        state: present
        validate_certs: no
        disable_gpg_check: true
      when: ansible_distribution == 'AlmaLinux'

    - name: alma dnf install 2
      become: true
      dnf:
        name: https://dl.fedoraproject.org/pub/epel/epel-next-release-latest-9.noarch.rpm
        state: present
        validate_certs: no
        disable_gpg_check: true
      when: ansible_distribution == 'AlmaLinux'

    - name: alma packages
      become: true
      yum:
        name: 
          - btop
# #          - build-essential
# #          - clang
          - curl
          - docker
  #        - docker-compose
  #        - eza
# #         - fd-find
# #          - fzf
# #          - gcc
          - git
          - helix 
# #          - neofetch
#          - lsd
          - qemu-guest-agent
          - net-tools
# #          - ranger
# #          - ripgrep
# #          - tldr
#           - tmux
          - wget
          - zsh
# #          - xz-utils
        state: latest
      when: ansible_distribution == 'AlmaLinux'

    - name: alma remove imagemagick
      become: true
      yum:
        name: 
          - ImageMagick
          - ImageMagick-libs.x86_64
          - ImageMagick-libs-6.9.12.93-1.el9.x86_64
          - ImageMagick-libs.x86_64.6.9.12.93-1.el9 
          - ImageMagick-libs.x86_64
        state: absent
        autoremove: yes
      when: ansible_distribution == 'AlmaLinux'


