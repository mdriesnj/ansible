    - name: Distribution
      debug: msg="{{ ansible_distribution }}"

#-------- Alpine------------------------

    - name: Alpine install 
      community.general.apk:
        name: wget, curl, git, zsh, helix, neofetch, ranger, btop, fzf, fd, qemu-guest-agent, eza, libcap-getcap, libcap-setcap, tzdata, sudo 
        state: latest
        update_cache: true
      when: ansible_distribution == 'Alpine'
      
#-------- Debian-------------------------    
    - name: Debian Update apt cache
      become: true
      apt:
        update_cache: yes
      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: Debian packages
      become: true
      apt:
        name: 
          - wget
          - curl
          - sudo
          - git 
          - zsh
          - vim
 #         - stow
          - net-tools   
          - ranger
          - neofetch
          - neovim 
          - bat
          - ncdu
          - btop
          - fzf
          - tldr
          - gdu
          - fd-find
          - xz-utils
#          - npm
        state: latest
      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#-------- Alm-------------------------    

    - name: alma dnf install 1
      become: true
      dnf:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
        state: present
        validate_certs: no
        disable_gpg_check: true
      when: ansible_distribution == 'AlmaLinux'
      
    - name: alma dnf install 2
      become: true
      dnf:
        name: https://dl.fedoraproject.org/pub/epel/epel-next-release-latest-9.noarch.rpm
        state: present
        validate_certs: no
        disable_gpg_check: true
      when: ansible_distribution == 'AlmaLinux'        

    - name: alma packages
      become: true
      yum:
        name: 
          - tar
          - wget
          - curl
          - sudo
          - git 
          - zsh
          - vim
 #         - stow
          - net-tools  
          - neofetch
          - neovim 
          - bat 
          - ncdu
          - btop
          - fzf
          - tldr
          - fd-find
          - xz
       #   - gdu
  #        - ranger not in yum
        state: latest
      when: ansible_distribution == 'AlmaLinux'

      
    - name: "get eza"
      become: true
      get_url:
        url: https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz
        dest: /tmp/
        mode: 0755
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "extract eza"
      become: true
      unarchive:
        remote_src: yes
        src: /tmp/eza_x86_64-unknown-linux-gnu.tar.gz
        dest: /usr/bin/
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "get nvim"
      become: true
      get_url:
        url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
        dest: /tmp/
        mode: 0755
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "extract nvim"
      become: true
      unarchive:
        remote_src: yes
        src: /tmp/nvim-linux64.tar.gz
        dest: /tmp
#        extra_opts:
#        - 'nvim-linux64/bin/nvim'
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "copy nvim /bin"
      become: true
      copy:
        remote_src: yes
        src: /tmp/nvim-linux64/bin/nvim
        dest: /bin/
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "copy nvim /bin"
      become: true
      copy:
        remote_src: yes
        src: /tmp/nvim-linux64/bin/nvim
        dest: /usr/bin/
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "copy nvim share"
      become: true
      copy:
        remote_src: yes
        src: /tmp/nvim-linux64/share/nvim/runtime/
        dest: /usr/share/nvim/runtime
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "get helix"
      become: true
      get_url:
        url: https://github.com/helix-editor/helix/releases/download/24.03/helix-24.03-x86_64-linux.tar.xz
        dest: /tmp/
        mode: 0755
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "extract helix"
      become: true
      unarchive:
        remote_src: yes
        src: /tmp/helix-24.03-x86_64-linux.tar.xz
        dest: /tmp
#        extra_opts:
#        - 'nvim-linux64/bin/nvim'
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "copy hx /bin"
      become: true
      copy:
        remote_src: yes
        src: /tmp/helix-24.03-x86_64-linux/hx
        dest: /usr/bin/
        mode: 0755
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "make helix runtime location"
      become: true
      file:
        path: /usr/share/helix/runtime
        state: directory
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    - name: "copy helix runtime /usr/share"
      become: true
      copy:
        remote_src: yes
        src: /tmp/helix-24.03-x86_64-linux/runtime
        dest: /usr/share/helix/
        mode: 0755
      when: ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'



#    - name: Update apt cache
#      apt:
#        name: gpg
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'


#    - name: Add an Apt signing key, uses whichever key is at the URL
#      ansible.builtin.apt_key:
#        url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: Add specified repository into sources list
#      ansible.builtin.apt_repository:
#        repo: deb http://deb.gierens.de stable main
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'


#    - name: update apt packages
#      apt:
#        update_cache: yes
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'


#    - name: Install eza
#      apt:
#        name: eza
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'



  
#    - name: "get eza executable"      
 #     get_url:
 #       url: https://raw.githubusercontent.com/eza-community/eza/main/deb.asc
 #       dest: /etc/apt/keyrings
#        mode: 0755
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: "install eza key"
#      command: gpg -o /etc/apt/keyrings/gierens.gpg /tmp/deb.asc



#    - name: "extract"
#      ansible.builtin.shell: tar -xvf /tmp/eza_x86_64-unknown-linux-gnu.tar.gz -C /usr/local/bin/
#      when: ansible_distribution == 'AlmaLinux'

#      become: true
#      file:
#        path: /usr/local/bin/eza
#        mode: '0755'
#      when: ansible_distribution == 'AlmaLinux'

    
#    - name: "Install gpg"
#      become: true
#      apt:
#        name: gpg
#        state: present
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'




    
#    - name: get eza key
#      command: curl -O /tmp/deb.asc https://raw.githubusercontent.com/eza-community/eza/main/deb.asc #|  gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: install eza key
#      ansible.builtin.shell: gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'




#    - name: install eza key
#      ansible.builtin.shell: echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" |  tee /etc/apt/sources.list.d/gierens.list
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

#    - name: adjust permissions
#      ansible.builtin.shell: chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
#      when: ansible_distribution == 'Debian' or ansible_distribution =='Ubuntu'

    


        
#    - name: update yum package
#      yum:
#        name: 'gpg'
#        state: latest
#      when: ansible_distribution == 'AlmaLinux'

#    - name: update yum package
#      yum:
#        name: 'gpg'
#        state: latest
#      when: ansible_distribution == 'AlmaLinux'



#    -name: 

#
#   - name: Update all packages on the system
#      community.general.openbsd_pkg:
#        name: '*'
#        state: latest
#      when: ansible_distribution == 'OpenBSD'
#
#    - name: Apply all patches and store result
 #     community.general.syspatch:
 #     register: syspatch
  #    when: ansible_distribution == 'OpenBSD' 
      
 #   - name: Reboot if patch requires it
  #    ansible.builtin.reboot:
   #   when: ansible_distribution == 'OpenBSD' and syspatch.reboot_needed
